//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.832
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.832.
// 
#pragma warning disable 1591

namespace myApp.ClientDAL.WSOrdreDAL {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using myApp.Model;

    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="OrdreDALSoap", Namespace="http://tempuri.org/")]
    public partial class OrdreDAL : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getOrdreOperationCompleted;
        
        private System.Threading.SendOrPostCallback nyOrdreOperationCompleted;
        
        private System.Threading.SendOrPostCallback slettOrdreOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public OrdreDAL() {
            this.Url = global::myApp.ClientDAL.Properties.Settings.Default.MyApp_ClientDAL_WSOrdreDAL_OrdreDAL;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getOrdreCompletedEventHandler getOrdreCompleted;
        
        /// <remarks/>
        public event nyOrdreCompletedEventHandler nyOrdreCompleted;
        
        /// <remarks/>
        public event slettOrdreCompletedEventHandler slettOrdreCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getOrdre", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Ordre getOrdre(int ordreID) {
            object[] results = this.Invoke("getOrdre", new object[] {
                        ordreID});
            return ((Ordre)(results[0]));
        }
        
        /// <remarks/>
        public void getOrdreAsync(int ordreID) {
            this.getOrdreAsync(ordreID, null);
        }
        
        /// <remarks/>
        public void getOrdreAsync(int ordreID, object userState) {
            if ((this.getOrdreOperationCompleted == null)) {
                this.getOrdreOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetOrdreOperationCompleted);
            }
            this.InvokeAsync("getOrdre", new object[] {
                        ordreID}, this.getOrdreOperationCompleted, userState);
        }
        
        private void OngetOrdreOperationCompleted(object arg) {
            if ((this.getOrdreCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getOrdreCompleted(this, new getOrdreCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/nyOrdre", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int nyOrdre(Ordre o) {
            object[] results = this.Invoke("nyOrdre", new object[] {
                        o});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void nyOrdreAsync(Ordre o) {
            this.nyOrdreAsync(o, null);
        }
        
        /// <remarks/>
        public void nyOrdreAsync(Ordre o, object userState) {
            if ((this.nyOrdreOperationCompleted == null)) {
                this.nyOrdreOperationCompleted = new System.Threading.SendOrPostCallback(this.OnnyOrdreOperationCompleted);
            }
            this.InvokeAsync("nyOrdre", new object[] {
                        o}, this.nyOrdreOperationCompleted, userState);
        }
        
        private void OnnyOrdreOperationCompleted(object arg) {
            if ((this.nyOrdreCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.nyOrdreCompleted(this, new nyOrdreCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/slettOrdre", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void slettOrdre(int ordreID) {
            this.Invoke("slettOrdre", new object[] {
                        ordreID});
        }
        
        /// <remarks/>
        public void slettOrdreAsync(int ordreID) {
            this.slettOrdreAsync(ordreID, null);
        }
        
        /// <remarks/>
        public void slettOrdreAsync(int ordreID, object userState) {
            if ((this.slettOrdreOperationCompleted == null)) {
                this.slettOrdreOperationCompleted = new System.Threading.SendOrPostCallback(this.OnslettOrdreOperationCompleted);
            }
            this.InvokeAsync("slettOrdre", new object[] {
                        ordreID}, this.slettOrdreOperationCompleted, userState);
        }
        
        private void OnslettOrdreOperationCompleted(object arg) {
            if ((this.slettOrdreCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.slettOrdreCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    /*
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Ordre {
        
        private int ordreIDField;
        
        private System.DateTime ordreDatoField;
        
        private string brukernavnField;
        
        /// <remarks/>
        public int OrdreID {
            get {
                return this.ordreIDField;
            }
            set {
                this.ordreIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime OrdreDato {
            get {
                return this.ordreDatoField;
            }
            set {
                this.ordreDatoField = value;
            }
        }
        
        /// <remarks/>
        public string Brukernavn {
            get {
                return this.brukernavnField;
            }
            set {
                this.brukernavnField = value;
            }
        }
    }
    */
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void getOrdreCompletedEventHandler(object sender, getOrdreCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getOrdreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getOrdreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Ordre Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Ordre)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void nyOrdreCompletedEventHandler(object sender, nyOrdreCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class nyOrdreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal nyOrdreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void slettOrdreCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591